// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// UserRoleDao is the manager for logic model data accessing and custom defined data operations functions management.
type UserRoleDao struct {
	gmvc.M                                      // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C       userRoleColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.	
	DB      gdb.DB                              // DB is the raw underlying database management object.
	Table   string                              // Table is the underlying table name of the DAO.
}

// UserRoleColumns defines and stores column names for table user_role.
type userRoleColumns struct {
	Id      string //         
    UserId  string // 用户id  
    RoleId  string // 角色id
}

// NewUserRoleDao creates and returns a new DAO object for table data access.
func NewUserRoleDao() *UserRoleDao {
    columns := userRoleColumns{
		Id:     "id",       
            UserId: "user_id",  
            RoleId: "role_id",
	}
	return &UserRoleDao{
		C: 	   columns,
		M:     g.DB("default").Model("user_role").Safe(),
		DB:    g.DB("default"),
		Table: "user_role",
	}
}