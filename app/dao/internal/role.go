// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// RoleDao is the manager for logic model data accessing and custom defined data operations functions management.
type RoleDao struct {
	gmvc.M                                      // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C       roleColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.	
	DB      gdb.DB                              // DB is the raw underlying database management object.
	Table   string                              // Table is the underlying table name of the DAO.
}

// RoleColumns defines and stores column names for table role.
type roleColumns struct {
	Id        string //         
    Name      string // 角色名  
    CreateAt  string //         
    UpdateAt  string //         
    DeleteAt  string //
}

// NewRoleDao creates and returns a new DAO object for table data access.
func NewRoleDao() *RoleDao {
    columns := roleColumns{
		Id:       "id",         
            Name:     "name",       
            CreateAt: "create_at",  
            UpdateAt: "update_at",  
            DeleteAt: "delete_at",
	}
	return &RoleDao{
		C: 	   columns,
		M:     g.DB("default").Model("role").Safe(),
		DB:    g.DB("default"),
		Table: "role",
	}
}