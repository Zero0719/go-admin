// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// RolePermissionDao is the manager for logic model data accessing and custom defined data operations functions management.
type RolePermissionDao struct {
	gmvc.M                                      // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C       rolePermissionColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.	
	DB      gdb.DB                              // DB is the raw underlying database management object.
	Table   string                              // Table is the underlying table name of the DAO.
}

// RolePermissionColumns defines and stores column names for table role_permission.
type rolePermissionColumns struct {
	Id            string //         
    RoleId        string // 角色id  
    PermissionId  string // 权限id
}

// NewRolePermissionDao creates and returns a new DAO object for table data access.
func NewRolePermissionDao() *RolePermissionDao {
    columns := rolePermissionColumns{
		Id:           "id",             
            RoleId:       "role_id",        
            PermissionId: "permission_id",
	}
	return &RolePermissionDao{
		C: 	   columns,
		M:     g.DB("default").Model("role_permission").Safe(),
		DB:    g.DB("default"),
		Table: "role_permission",
	}
}